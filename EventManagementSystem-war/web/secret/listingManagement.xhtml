<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <body>

        <ui:composition template="./../layout/default2.xhtml">

            <ui:define name="content">

                <h:form id ="createEvent">
                    <!-- Change type from "submit" to "button" -->
                    &nbsp;
                    <h:commandButton value="Add Event" onclick="addEvent()" class="btn btn-primary" type="button"/>
                </h:form>

                <div class="row mt-4" id="results"></div>


                <div id="dialog" class="dialog">
                    <div class="dialog-content">
                        <span class="close" onclick="closeEvent()">&times;</span>
                        <h2>Add New Event</h2>
                        <h:form id="editProfile" enctype="multipart/form-data">
                            <h:messages id="messages" style='background-color: #f2dede; color: #a94442;
                                        border: 1px solid #ebccd1; padding: 10px; margin-bottom: 20px;'/>
                            <div class="center-content">
                                <p>
                                    <label for="title">Title</label>
                                    <h:inputText id="title" value="#{eventManagedBean.title}" styleClass="form-control" required="true"
                                                 requiredMessage="Title is required."/>
                                    <!--                                    <h:message for="title" style="border: 2px solid red; padding: 10px;padding: 10px; border-radius: 5px; background-color: #c61a09;
                                                                                   color: white;"/>-->
                                </p>
                                <p>
                                    <label>Upload Image &nbsp;</label>
                                    <h:inputFile value="#{eventManagedBean.uploadedFile}">
                                        <f:ajax listener="#{eventManagedBean.upload}"  />
                                    </h:inputFile>
                                </p>

                                <p>
                                    <label for="eventDate">Event Date (dd-MM-yyyy)</label>
                                    <h:inputText id="eventDate" value="#{eventManagedBean.eventDate}" styleClass="form-control" required="true"
                                                 requiredMessage="eventDate is required."/>
                                    <!--                                    <h:message for="eventDate" style="border: 2px solid red; padding: 10px;padding: 10px; border-radius: 5px; background-color: #c61a09;
                                                                                   color: white;"/>-->
                                </p>

                                <p>
                                    <label for="eventTime">Event Date (HH:mm)</label>
                                    <h:inputText id="eventTime" value="#{eventManagedBean.evenTime}" styleClass="form-control" required="true"
                                                 requiredMessage="eventDate Time is required."/>
                                    <!--                                    <h:message for="eventTime" style="border: 2px solid red; padding: 10px;padding: 10px; border-radius: 5px; background-color: #c61a09;
                                                                                   color: white;"/>-->

                                </p>

                                <p>
                                    <h:outputText value="Event Category" />
                                    <h:selectOneMenu value="#{eventManagedBean.eventCat}">
                                        <f:selectItem itemValue="Music" itemLabel="Music" /> 
                                        <f:selectItem itemValue="Nightlife" itemLabel="Nightlife" /> 
                                        <f:selectItem itemValue="Performing Art" itemLabel="Performing Art" /> 
                                        <f:selectItem itemValue="Holidays" itemLabel="Holidays" /> 
                                        <f:selectItem itemValue="Health" itemLabel="Health" /> 
                                        <f:selectItem itemValue="Hobbies" itemLabel="Hobbies" /> 
                                        <f:selectItem itemValue="Business" itemLabel="Business" /> 
                                        <f:selectItem itemValue="Food and Drink" itemLabel="Food and Drink" /> 
                                        <f:selectItem itemValue="Other" itemLabel="Other" /> 
                                    </h:selectOneMenu>
                                </p>

                                <p>
                                    <label for="deadline">Deadline Date (dd-MM-yyyy)</label>
                                    <h:inputText id="deadline" value="#{eventManagedBean.deadline}" styleClass="form-control" required="true"
                                                 requiredMessage="event deadline is required."/>
                                    <!--                                    <h:message for="deadline" style="border: 2px solid red; padding: 10px;padding: 10px; border-radius: 5px; background-color: #c61a09;
                                                                                   color: white;"/>-->

                                </p>

                                <p>
                                    <label for="deadlineTime">Deadline Time (HH:mm)</label>
                                    <h:inputText id="deadlineTime" value="#{eventManagedBean.deadlineTime}" styleClass="form-control" required="true"
                                                 requiredMessage="event deadline time is required."/>
                                    <!--                                    <h:message for="deadlineTime" style="border: 2px solid red; padding: 10px;padding: 10px; border-radius: 5px; background-color: #c61a09;
                                                                                   color: white;"/>-->

                                </p>

                                <p>
                                    <label for="description">Description</label>
                                    <h:inputText id="description" value="#{eventManagedBean.description}" styleClass="form-control" required="true"
                                                 requiredMessage="description is required."/>
                                </p>

                                <p>
                                    <label for="maxPax">Max Pax:</label>
                                    <h:inputText id="maxPax" value="#{eventManagedBean.maxPax}" styleClass="form-control" required="true"
                                                 requiredMessage="max pax is required."/>
                                </p>

                                <p>
                                    <label for="duration">Duration:</label>
                                    <h:inputText id="duration" value="#{eventManagedBean.estimateDurationMins}" styleClass="form-control" />
                                </p>

                                <p>
                                    <label for="street1">Street 1:</label>
                                    <h:inputText id="street1" value="#{eventManagedBean.street1}" styleClass="form-control" />
                                </p>

                                <p>
                                    <label for="street2">Street 2:</label>
                                    <h:inputText id="street2" value="#{eventManagedBean.street2}" styleClass="form-control" />
                                </p>

                                <p>
                                    <label for="city">City:</label>
                                    <h:inputText id="city" value="#{eventManagedBean.city}" styleClass="form-control" />
                                </p>

                                <p>
                                    <label for="postalCode">Postal Code:</label>
                                    <h:inputText id="postalCode" value="#{eventManagedBean.postalCode}" styleClass="form-control" />
                                </p>

                                <h:commandButton action="#{eventManagedBean.addEvent}" value="Add Event" class="btn btn-primary">
                                    <f:ajax execute="@form" render="@form" />
                                </h:commandButton>

                            </div>
                        </h:form>

                    </div>
                </div>


                <div id="details" class="dialog">
                    <div class="dialog-content">
                        <span class="close" onclick="closeResultDialog()">&times;</span>
                        <h2>Event Details</h2>
                        <img id="eventImage" alt="Event Image" style="width:300px"/>
                        <p>Event Id: <span id="eventId"></span></p>
                        <p>Title: <span id="eventTitle"></span></p>
                        <p>Description: <span id="eventDescription"></span></p>
                        <p>Date: <span id="eventDate"></span></p>
                        <p>Deadline: <span id="eventDeadline"></span></p>
                        <p>Max Pax: <span id="maxPax"></span></p>
                        <p>Event Category: <span id="eventCategory"></span></p>
                        <p>Organizer:<span id="organiser"></span> </p>
                        <div id="buttonContainer"></div>
                    </div>
                </div>

                <div id="confirmation" class="dialog" style="display: none;">
                    <div class="dialog-content">
                        <h:form id="confirm">
                            <span class="close" onclick="closeDeleteDialog()">&times;</span>
                            <p>Delete?</p>
                            <p>Event ID: <span id ="displayEventId"/></p>

                            <button onclick="deleteEvent()" type="button">Confirm</button>
                        </h:form>
                    </div>
                </div>


                <script>
                    window.onload = function () {
                        loadAllResults();
                    }

                    function addEvent() {
                        document.getElementById('dialog').style.display = 'block';
                    }

                    function closeEvent() {
                        document.getElementById('dialog').style.display = 'none';
                        dialog.style.display = 'none';
                        window.location.reload();
                    }

                    $(document).ready(function () {
                        $('#datetimepicker').datetimepicker({
                            dateFormat: 'dd-mm-yyyy', // Set the date format
                            timeFormat: 'HH:mm', // Set the time format
                            onSelect: function (dateTimeText) {
                                // Update the hidden input field with the selected date time
                                document.getElementById('selectedDateTime').value = dateTimeText;
                                console.log(dateTimeText);
                            }
                        });
                    });

                    $('#deadlinePicker').datetimepicker({
                        dateFormat: 'dd-mm-yyyy', // Set the date format
                        timeFormat: 'HH:mm', // Set the time format
                        onSelect: function (dateTimeText) {
                            // Update the hidden input field with the selected date time
                            document.getElementById('selectedDeadline').value = dateTimeText;
                            console.log(dateTimeText);
                        }
                    });

                    function loadAllResults() {
                        var userId = '${authenticationManagedBean.userId}';
                        var url = '.././webresources/events/' + userId;

                        fetch(url)
                                .then(response => response.json())
                                .then(data => {
                                    displayResults(data);
                                })
                                .catch(error => {
                                    console.error('Error fetching data:', error);
                                });
                    }


                    function displayResults(results) {
                        var resultsDiv = document.getElementById('results');
                        resultsDiv.innerHTML = ''; // Clear previous results

                        if (results.length === 0) {
                            resultsDiv.innerHTML = '<p class="text-muted">No results found.</p>';
                            return;
                        }

//                        results.forEach(result => {
//                            console.log(result.title);
//                            var name = result.title;
//                            var card = `
//                                <div class="col-md-4 mb-4">
//                                    <div class="card">
//                                        <div class="card-body">
//                                            <h5 class="card-title">Title: ${result.title}</h5>
//                                            <p class="card-text">${result.description}</p>
//                                        </div>
//                                    </div>
//                                </div>
//                            `;
//                            resultsDiv.innerHTML += card;
//                        });

                        results.forEach(result => {
                            console.log(result);

                            var dateString = result.date.substring(0, 10); // Extracts 'yyyy-MM-dd'
                            var timeString = result.date.substring(11, 16); // Extracts 'HH:mm'

                            var formattedDate = dateString.split('-').reverse().join('-'); // Reformat date string as 'dd-MM-yyyy'
                            var formattedTime = timeString;

                            var deadlineString = result.deadline.substring(0, 10); // Extracts 'yyyy-MM-dd'
                            var deadlineTimeString = result.deadline.substring(11, 16); // Extracts 'HH:mm'

                            var formattedDate2 = deadlineString.split('-').reverse().join('-'); // Reformat date string as 'dd-MM-yyyy'
                            var formattedTime2 = deadlineTimeString;

                            var card =
                                    '<div class="col-md-4 mb-4">' +
                                    '  <div class="card">' +
                                    '      <p class="card-text"> &nbsp;&nbsp;' + result.eventCategory + '</p>' +
                                    '   <img class="card-img-top" src=".././eventPicture/' + result.eventImage + '" alt="Card image cap"/>' +
                                    '    <div class="card-body">' +
                                    '      <h3 class="card-title">' + result.title + '</h3>' +
                                    '      <p class="card-text">' + result.description + '</p>' +
                                    '      <p class="card-text">' + formattedDate + ' ' + formattedTime + '</p>' +
                                    '      <p class="card-text"> Sign Up By ' + formattedDate2 + ' ' + formattedTime2 + '</p>' +
                                    '      <center><button class="btn btn-primary" onclick="showResults(' + result.id + ')" style="width:300px" type="button">More Details</button></center>' +
                                    '    </div>' +
                                    '  </div>' +
                                    '</div>';

                            resultsDiv.insertAdjacentHTML('beforeend', card);
                        });
                    }

                    function showResults(eventId) {
                        document.getElementById('details').style.display = 'block';
                        showEventDetails(eventId);
                    }

                    function closeResultDialog() {
                        document.getElementById('details').style.display = 'none';
                    }

                    function showEventDetails(eventId) {
                        // Here, you can fetch event details using AJAX (e.g., fetch API or jQuery AJAX) or access them directly from a managed bean
                        // For example, if you're using fetch API:
                        userId = ${authenticationManagedBean.userId.toString()};
                        console.log(userId);
                        fetch('../webresources/events/id?id=' + eventId)
                                .then(response => response.json())
                                .then(data => {
                                    // Populate the dialog with event details
                                    document.getElementById('eventImage').src = ".././eventPicture/" + data.eventImage;
                                    document.getElementById('eventTitle').textContent = data.title;
                                    document.getElementById('eventDescription').textContent = data.description;
                                    document.getElementById('eventDate').textContent = data.date;
                                    document.getElementById('eventDeadline').textContent = data.deadline;
                                    document.getElementById('maxPax').textContent = data.maxPax;
                                    document.getElementById('eventId').textContent = eventId;
                                    document.getElementById('eventCategory').textContent = data.eventCategory;
                                    console.log("eventId:", eventId);
                                    var organiserName = data.organiser.firstName + " " + data.organiser.lastName;
                                    document.getElementById('organiser').textContent = organiserName;
                                    buttonContainer.innerHTML = '';

                                    var button = document.createElement('button');
                                    button.textContent = 'Delete';
                                    button.style.backgroundColor = 'red';
                                    buttonContainer.appendChild(button);
                                    // Add event listener to the button
                                    button.addEventListener('click', function () {
                                        var confirmationDialog = document.getElementById('confirmation');
                                        confirmationDialog.style.display = 'block';
                                        var eventId = document.getElementById('eventId').textContent;
                                        console.log("testiee" + eventId);
                                        document.getElementById('displayEventId').textContent = eventId;
                                    });

                                    var viewAttendanceButton = document.createElement('button');
                                    viewAttendanceButton.textContent = 'View Attendance';
                                    buttonContainer.appendChild(viewAttendanceButton);
                                    viewAttendanceButton.addEventListener('click', function () {
                                        // Navigate to another page to view attendance
                                        window.location.href = 'attendance.xhtml?eventid=' + eventId; // Replace 'attendance.html' with the actual URL of your attendance page
                                    });
                                })
                                .catch(error => console.error('Error fetching event details:', error));
                    }

                    function deleteEvent() {
                        // Replace eventId and userId with the actual values
                        const eventId = document.getElementById('displayEventId').textContent;
                        console.log("does it reach here?");
                        deleteAnEvent(eventId);
                    }

                    function deleteAnEvent(eventId) {
                        const url = '../webresources/events/id?id=' + eventId;
                        console.log(url);
                        fetch(url, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Failed to delete the event');
                                    }
                                    // No need to parse response data for DELETE requests
                                })
                                .then(() => {
                                    console.log('Successfully deleted for the event');
                                    alert('Successfully deleted for the event');
                                    closeDeleteDialog();
                                    // Handle success response here if needed
                                })
                                .catch(error => {
                                    console.error('Error deleting the event:', error);
                                    alert('Error deleting for the event: ' + error.message);
                                    // Handle error here if needed
                                });

                    }

                    function closeDeleteDialog() {
                        var confirmationDialog = document.getElementById('confirmation');
                        confirmationDialog.style.display = 'none';
                        window.location.reload();
                    }
                </script>
            </ui:define>

        </ui:composition>

    </body>
</html>
