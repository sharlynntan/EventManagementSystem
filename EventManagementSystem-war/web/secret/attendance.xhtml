<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

    <body>

        <ui:composition template="./../layout/default2.xhtml">

            <ui:define name="content">
                <table id="dataTable" class="table table-striped" style="width:100%">
                    <thead>
                        <tr>
                            <th>Profile Picture</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>Contact Number </th>
                            <th>Attendance</th>
                            <th>Action</th>
                            <th>View Profile</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>


                <script>
                    window.onload = function () {
                        const paramValue = getQueryParam('eventid');
                        console.log(paramValue);
                        loadAllResults(paramValue);
                    }
                    function getQueryParam(paramName) {
                        const urlParams = new URLSearchParams(window.location.search);
                        return urlParams.get(paramName);
                    }

                    function loadAllResults(paramValue) {
                        var url = '.././webresources/events/attendance?id=' + paramValue;

                        fetch(url)
                                .then(response => response.json())
                                .then(data => {
                                    displayResults(data);
                                })
                                .catch(error => {
                                    console.error('Error fetching data:', error);
                                });
                    }

                    function displayResults(results) {
                        const tableBody = document.querySelector('#dataTable tbody');
                        console.log(results);

                        // Check if response is empty
                        if (results.length === 0) {
                            const noResultsRow = document.createElement('tr');
                            noResultsRow.innerHTML = '<td colspan="3">No results</td>'; // Colspan 3 to span all columns
                            tableBody.appendChild(noResultsRow);
                        } else {
                            results.forEach(entry => {
                                const row = document.createElement('tr');
                                console.log(entry.attendance);
                                const profilePic = entry.person.profilePictureName;
                                const fullName = entry.person.firstName + ' ' + entry.person.lastName;
                                const email = entry.person.email;
                                const contactNumber = entry.person.contactNumber;
                                const attendance = entry.attendance ? "Present" : "Absent";

                                console.log(profilePic);
                                row.innerHTML = '<td><img src=".././profilePicture/' + profilePic + '" alt="Profile Picture" style="width:100px"/></td>' +
                                        '<td>' + fullName + '</td>' +
                                        '<td>' + email + '</td>' +
                                        '<td>' + contactNumber + '</td>' +
                                        '<td>' + attendance + '</td>';
                                if (!entry.attendance) {
                                    row.innerHTML += '<td><button onclick="markPresent(' + entry.person.id + ')" type="button">Mark Present</button></td>';
                                } else {
                                    row.innerHTML += '<td><button onclick="markAbsent(' + entry.person.id + ')" type="button" style="background-color: red;">Mark Absent</button></td>'; // Add empty cell if attendance is true
                                }

                                const buttonHtml = '<button onclick="window.location.href=\'externalProfile.xhtml?userId=' + entry.person.id + '\'">Redirect</button>';
                                row.innerHTML += '<td>' + buttonHtml + '</td>';
                                tableBody.appendChild(row);
                            });
                        }

                    }

                    function markPresent(userId) {
                        // Define the event ID and the URL
                        const eventId = getQueryParam('eventid'); // Replace with the actual event ID
                        console.log(eventId);
                        const url = '.././webresources/events/' + eventId + '/attendance?id=' + userId;

                        // Define the request options
                        const requestOptions = {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({}) // Empty body since we're using query parameters for userId
                        };

                        // Make the POST request
                        fetch(url, requestOptions)
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Failed to mark present');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log(data.message); // Log the response message
                                    console.log("User with ID " + userId + " marked present.");
                                    alert("User marked present successfully!");
                                    location.reload();
                                })
                                .catch(error => {
                                    console.error('Error marking present:', error.message);
                                });
                    }

                    function markAbsent(userId) {
                        // Define the event ID and the URL
                        const eventId = getQueryParam('eventid'); // Replace with the actual event ID
                        console.log(eventId);
                        const url = '.././webresources/events/' + eventId + '/absent?id=' + userId;

                        // Define the request options
                        const requestOptions = {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({}) // Empty body since we're using query parameters for userId
                        };

                        // Make the POST request
                        fetch(url, requestOptions)
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Failed to mark absent');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log(data.message); // Log the response message
                                    console.log("User with ID " + userId + " marked absent.");
                                    alert("User marked absent successfully!");
                                    location.reload();
                                })
                                .catch(error => {
                                    console.error('Error marking absent', error.message);
                                });
                    }


                </script>
            </ui:define>



        </ui:composition>

    </body>
</html>
