<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

    <body>

        <ui:composition template="./../layout/default2.xhtml">

            <ui:define name="content">
                <div class="row mt-4" id="results"></div>


                <div id="details" class="dialog">
                    <div class="dialog-content">
                        <span class="close" onclick="closeResultDialog()">&times;</span>
                        <h2>Event Details</h2>
                        <img id="eventImage" alt="Event Image" style="width:300px"/>
                        <p>Event Id: <span id="eventId"></span></p>
                        <p>Title: <span id="eventTitle"></span></p>
                        <p>Description: <span id="eventDescription"></span></p>
                        <p>Date: <span id="eventDate"></span></p>
                        <p>Deadline: <span id="eventDeadline"></span></p>
                        <p>Max Pax: <span id="maxPax"></span></p>
                        <p>Event Category: <span id="eventCategory"></span></p>
                        <p>Organizer:<span id="organiser"></span> </p>
                        <div id="buttonContainer"></div>
                    </div>
                </div>

                <div id="unregister" class="dialog" style="display: none;">
                    <div class="dialog-content">
                        <h:form id="unreigstered">
                            <span class="close" onclick="closeUnregisterDialog()">&times;</span>
                            <p>Confirm Unregister?</p>
                            <p>Event ID: <span id ="displayEventId"/></p>

                            <button onclick="unregister()" type="button">Confirm</button>
                        </h:form>
                    </div>
                </div>



                <script>
                    window.onload = function () {
                        loadAllResults();
                    }

                    function loadAllResults() {
                        var userId = '${authenticationManagedBean.userId}';
                        var url = '.././webresources/events/registered/' + userId;

                        fetch(url)
                                .then(response => response.json())
                                .then(data => {
                                    displayResults(data);
                                })
                                .catch(error => {
                                    console.error('Error fetching data:', error);
                                });
                    }

                    function displayResults(results) {
                        var resultsDiv = document.getElementById('results');
                        resultsDiv.innerHTML = ''; // Clear previous results

                        if (results.length === 0) {
                            resultsDiv.innerHTML = '<p class="text-muted">No results found.</p>';
                            return;
                        }

                        results.forEach(result => {
                            console.log(result);

                            var dateString = result.date.substring(0, 10); // Extracts 'yyyy-MM-dd'
                            var timeString = result.date.substring(11, 16); // Extracts 'HH:mm'

                            var formattedDate = dateString.split('-').reverse().join('-'); // Reformat date string as 'dd-MM-yyyy'
                            var formattedTime = timeString;

                            var deadlineString = result.deadline.substring(0, 10); // Extracts 'yyyy-MM-dd'
                            var deadlineTimeString = result.deadline.substring(11, 16); // Extracts 'HH:mm'

                            var formattedDate2 = deadlineString.split('-').reverse().join('-'); // Reformat date string as 'dd-MM-yyyy'
                            var formattedTime2 = deadlineTimeString;

                            var card =
                                    '<div class="col-md-4 mb-4">' +
                                    '  <div class="card">' +
                                    '      <p class="card-text"> &nbsp;&nbsp;' + result.eventCategory + '</p>' +
                                    '   <img class="card-img-top" src=".././eventPicture/' + result.eventImage + '" alt="Card image cap"/>' +
                                    '    <div class="card-body">' +
                                    '      <h3 class="card-title">' + result.title + '</h3>' +
                                    '      <p class="card-text">' + result.description + '</p>' +
                                    '      <p class="card-text">' + formattedDate + ' ' + formattedTime + '</p>' +
                                    '      <p class="card-text"> Sign Up By ' + formattedDate2 + ' ' + formattedTime2 + '</p>' +
                                    '      <center><button class="btn btn-primary" onclick="showResults(' + result.id + ')" style="width:300px" type="button">More Details</button></center>' +
                                    '    </div>' +
                                    '  </div>' +
                                    '</div>';

                            resultsDiv.insertAdjacentHTML('beforeend', card);
                        });
                    }

                    function showResults(eventId) {
                        document.getElementById('details').style.display = 'block';
                        showEventDetails(eventId);
                    }

                    function closeResultDialog() {
                        document.getElementById('details').style.display = 'none';
                    }

                    function showEventDetails(eventId) {
                        // Here, you can fetch event details using AJAX (e.g., fetch API or jQuery AJAX) or access them directly from a managed bean
                        // For example, if you're using fetch API:
                        userId = ${authenticationManagedBean.userId.toString()};
                        console.log(userId);
                        fetch('../webresources/events/id?id=' + eventId)
                                .then(response => response.json())
                                .then(data => {
                                    // Populate the dialog with event details
                                    document.getElementById('eventImage').src = ".././eventPicture/" + data.eventImage;
                                    document.getElementById('eventTitle').textContent = data.title;
                                    document.getElementById('eventDescription').textContent = data.description;
                                    document.getElementById('eventDate').textContent = data.date;
                                    document.getElementById('eventDeadline').textContent = data.deadline;
                                    document.getElementById('maxPax').textContent = data.maxPax;
                                    document.getElementById('eventId').textContent = eventId;
                                    document.getElementById('eventCategory').textContent = data.eventCategory;
                                    console.log("eventId:", eventId);
                                    var organiserName = data.organiser.firstName + " " + data.organiser.lastName;
                                    document.getElementById('organiser').textContent = organiserName;
                                    buttonContainer.innerHTML = '';

                                    var button = document.createElement('button');
                                    button.textContent = 'Unregister';
                                    buttonContainer.appendChild(button);
                                    // Add event listener to the button
                                    button.addEventListener('click', function () {
                                        var confirmationDialog = document.getElementById('unregister');
                                        confirmationDialog.style.display = 'block';
                                        var eventId = document.getElementById('eventId').textContent;
                                        console.log("testiee" + eventId);
                                        document.getElementById('displayEventId').textContent = eventId;
                                    });
                                })
                                .catch(error => console.error('Error fetching event details:', error));
                    }

                    function unregister() {
                        // Replace eventId and userId with the actual values
                        const eventId = document.getElementById('displayEventId').textContent; // Replace with the actual event ID
                        const userId = ${authenticationManagedBean.userId};  // Replace with the actual user ID
                        console.log("does it reach here?");
                        unregisterforevent(eventId, userId);
                    }

                    function unregisterforevent(eventId, userId) {
                        const url = ".././webresources/events/" + eventId + "/userId?userId=" + userId;
                        console.log(url);
                        fetch(url, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Failed to unregister for the event');
                                    }
                                    // No need to parse response data for DELETE requests
                                })
                                .then(() => {
                                    console.log('Successfully unregistered for the event');
                                    alert('Successfully unregistered for the event');
                                    closeUnregisterDialog();
                                    // Handle success response here if needed
                                })
                                .catch(error => {
                                    console.error('Error unregistering for the event:', error);
                                    alert('Error unregistering for the event: ' + error.message);
                                    // Handle error here if needed
                                });

                    }

                    function closeUnregisterDialog() {
                        var confirmationDialog = document.getElementById('unregister');
                        confirmationDialog.style.display = 'none';
                        window.location.reload();
                    }
                </script>
            </ui:define>

        </ui:composition>

    </body>
</html>
